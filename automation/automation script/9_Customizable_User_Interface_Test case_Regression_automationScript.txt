To automate the regression test cases using a BDD framework with Java Selenium, we can use Cucumber for writing feature files and Gherkin syntax to define the scenarios. Below is an example implementation of the automation scripts for the provided regression test cases:

1. Create a feature file (UI_Customization.feature) with the following scenarios:

```gherkin
Feature: UI Customization and Theme Selection

Scenario: Verify that the customized UI settings are saved for future visits
  Given User is logged in and has previously customized the UI
  When User logs out and logs back in
  Then The UI should retain the previously selected color scheme, font style, size, and background image

Scenario: Verify that the policyholder can reset the UI customization settings to default
  Given User is logged in and has customized the UI
  When User clicks on the reset button
  Then The UI should revert to the default color scheme, font style, size, and background image
```

2. Create step definitions for the feature file:

```java
package stepDefinitions;

import io.cucumber.java.en.Given;
import io.cucumber.java.en.When;
import io.cucumber.java.en.Then;

public class UICustomizationSteps {

    @Given("User is logged in and has previously customized the UI")
    public void userIsLoggedInAndCustomizedUI() {
        // Implement the steps to log in and customize the UI
    }

    @When("User logs out and logs back in")
    public void userLogsOutAndLogsBackIn() {
        // Implement the steps to log out and log back in
    }

    @Then("The UI should retain the previously selected color scheme, font style, size, and background image")
    public void uiShouldRetainCustomization() {
        // Implement the verification steps to check UI customization retention
    }

    @Given("User is logged in and has customized the UI")
    public void userIsLoggedInAndCustomizedUI() {
        // Implement the steps to log in and customize the UI
    }

    @When("User clicks on the reset button")
    public void userClicksOnResetButton() {
        // Implement the steps to click on the reset button
    }

    @Then("The UI should revert to the default color scheme, font style, size, and background image")
    public void uiShouldRevertToDefault() {
        // Implement the verification steps to check UI customization reset
    }
}
```

3. Create a TestRunner class to execute the feature file:

```java
package testRunners;

import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;
import org.junit.runner.RunWith;

@RunWith(Cucumber.class)
@CucumberOptions(
        features = "src/test/resources/features/UI_Customization.feature",
        glue = "stepDefinitions"
)
public class TestRunner {
}
```

4. Implement the Selenium WebDriver code within the step definitions to interact with the UI elements and perform the necessary actions for logging in, customizing UI, logging out, and resetting UI settings.

By following this structure, you can automate the regression test cases using a BDD framework with Java Selenium for the UI Customization and Theme Selection feature.