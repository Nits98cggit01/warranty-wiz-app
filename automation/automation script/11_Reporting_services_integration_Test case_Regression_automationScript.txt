To automate the regression test cases using BDD framework with Java Selenium, we can use Cucumber for writing feature files and defining step definitions. Below is an example implementation for the provided regression test cases:

1. Create a Maven project in your IDE and add the necessary dependencies for Selenium, Cucumber, and WebDriverManager.

2. Create a feature file for each regression test case:

DataAccuracyTest.feature:
```gherkin
Feature: Data Accuracy Test

Scenario: Verify reporting services pull data accurately
Given Database with sample data is available
When Data is pulled using reporting services
Then Compare the pulled data with the actual data in the database
And The pulled data matches the data in the database
```

CustomizationTest.feature:
```gherkin
Feature: Customization Test

Scenario: Verify reports can be customized based on user preferences
Given User preferences for report customization are defined
When A report is customized based on user preferences
Then Verify that the report reflects the customized settings
And The report displays according to the user preferences
```

3. Create step definitions for the feature files:

DataAccuracyTestSteps.java:
```java
public class DataAccuracyTestSteps {

    @Given("Database with sample data is available")
    public void databaseWithSampleDataIsAvailable() {
        // Implement code to set up database with sample data
    }

    @When("Data is pulled using reporting services")
    public void dataIsPulledUsingReportingServices() {
        // Implement code to pull data using reporting services
    }

    @Then("Compare the pulled data with the actual data in the database")
    public void comparePulledDataWithActualData() {
        // Implement code to compare pulled data with actual data in the database
    }

    @Then("The pulled data matches the data in the database")
    public void verifyDataAccuracy() {
        // Implement code to verify data accuracy
    }
}
```

CustomizationTestSteps.java:
```java
public class CustomizationTestSteps {

    @Given("User preferences for report customization are defined")
    public void userPreferencesForReportCustomizationAreDefined() {
        // Implement code to define user preferences for report customization
    }

    @When("A report is customized based on user preferences")
    public void reportIsCustomizedBasedOnUserPreferences() {
        // Implement code to customize a report based on user preferences
    }

    @Then("Verify that the report reflects the customized settings")
    public void verifyReportReflectsCustomizedSettings() {
        // Implement code to verify that the report reflects the customized settings
    }

    @Then("The report displays according to the user preferences")
    public void verifyReportDisplaysAccordingToUserPreferences() {
        // Implement code to verify that the report displays according to user preferences
    }
}
```

4. Create a TestRunner class to run the feature files:

TestRunner.java:
```java
import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;
import org.junit.runner.RunWith;

@RunWith(Cucumber.class)
@CucumberOptions(features = {"src/test/resources/features"},
                 glue = {"stepDefinitions"})
public class TestRunner {
}
```

5. Implement the automation scripts for each step definition using Java Selenium to interact with the reporting services and customize reports.

6. Run the TestRunner class to execute the regression test cases using the BDD framework.

This setup allows you to automate the regression test cases using BDD framework with Java Selenium, ensuring that the core functionalities related to data accuracy and report customization are tested efficiently.